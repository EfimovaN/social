{"version":3,"sources":["components/Profile/Profile.module.css","components/Login/Login.module.css","components/common/FormsControls/FormsControls.js","components/Profile/Gallery/Gallery.module.css","redux/messages-reducer.js","components/common/preloader/Preloader.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/common/FormsControls/FormControls.module.css","api/api.js","utils/object-helpers.js","redux/users-reducer.js","img/user-icons.png","components/common/Paginator/Paginator.jsx","components/Users/Users.jsx","img/preloader.svg","components/common/preloader/preloader.jsx","redux/users-selectors.js","components/Users/usersContainer.jsx","redux/profile-reducer.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Gallery/Gallery.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","redux/auth-reducer.js","components/Header/Navbar/Navbar.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","App.js","hoc/withSuspense.js","redux/redux-store.js","index.js","utils/validators/validators.js","components/Users/Users.module.css","components/Header/Navbar/Navbar.module.css","components/Header/Header.module.css","components/common/Paginator/Paginator.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","hoc/withAuthRedirect.js"],"names":["module","exports","FormControl","input","meta","touched","error","children","hasError","className","classes","formControl","errorPassword","Textarea","props","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","ADD_MESSAGE","initialState","dialogs","id","img","messages","message","addMessage","newMessageBody","type","messagesReducer","state","action","newMessage","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","profileAPI","status","put","photoFile","formData","FormData","append","profile","authAPI","email","password","rememberMe","captcha","securityAPI","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_TOTAL_USERS_COUNT","SET_CURRENT_PAGE","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","fake","setCurrentPage","toggleIsFetching","toggleFollowingProgress","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","classNames","selectedPage","pageNumber","e","Users","userContainer","userList","userItem","to","src","photos","small","userPhoto","photo","userInfo","disabled","some","unfollow","follow","Preloader","preloader","getUsers","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","this","React","Component","compose","connect","dispatch","resultCode","followSuccess","unfollowSuccess","totalCount","ADD_POST","SET_USERS_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","posts","like","setStatus","getUserProfile","profileReducer","newPostText","newPostBody","postId","ProfileStatusWithHooks","editMode","setEditMode","useEffect","onChange","currentTarget","value","autoFocus","onBlur","updateStatus","status__change","onDoubleClick","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","onSubmit","wrapper","save__profile","forms","formControlSummaryError","Object","keys","contacts","key","contact","ProfileData","isOwner","goToEditMode","profileData","info__edit","button__profile","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactsTitle","contactsValue","Contacts","ProfileInfo","savePhoto","saveProfile","login","profileInfo","avatar","large","imageUpload","htmlFor","uploadPhoto","target","files","length","accept","style","display","initialValues","Post","alt","width","height","maxLength200","maxLengthCreator","MyPostsReduxForm","myPostsForm","Field","required","MyPosts","memo","postsElement","myPosts","values","addPost","postList","MyPostsContainer","profilePage","Gallery","gallery","photos__list","photos__item","video","video__list","video__item","title","frameBorder","allow","allowFullScreen","members","members__list","members__item","Profile","profileContainer","ProfileContainer","match","params","authorizedUserId","history","getStatus","refreshProfile","prevProps","prevState","snapshot","withAuthRedirect","auth","file","getState","a","stopSubmit","_error","Promise","reject","withRouter","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","isAuth","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","getCaptchaUrl","url","authReducer","Navbar","nav","activeClassName","active","Header","header","container","logo","loginBlock","logout","HeaderContainer","LoginReduxForm","loginForm","checkbox","loginPage","INITIALIZED_SUCCESS","initialized","appReducer","MessagesContainer","lazy","App","initializeApp","exact","path","render","Suspense","fallback","app","reducers","combineReducers","messagesPage","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","_store_","ReactDOM","document","getElementById","maxLength","mapStateToPropsForRedirect","RedirectComponent"],"mappings":"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","file":"static/js/main.d01099c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"Profile_profileContainer__3lONb\",\"profile\":\"Profile_profile__3dzvr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__-UEgp\",\"loginForm\":\"Login_loginForm__1Hg13\"};","import React from \"react\";\nimport classes from \"./FormControls.module.css\";\nimport {required} from \"../../../utils/validators/validators\";\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({input, meta: {touched, error}, children}) => {\n    const hasError = touched && error;\n    return (\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span className={classes.errorPassword}>{error}</span>}\n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}\n\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\n    <div>\n        <Field placeholder={placeholder} name={name}\n               validate={validators}\n               component={component}\n               {...props}\n        /> {text}\n    </div>\n)\n\n\n// import React from 'react';\n// import classes from './FormControls.module.css';\n\n// const FormControl = ({ input, meta, Formtype, ...props }) => {\n//   const hasError = meta.touched && meta.error;\n//   return (\n//     <div className={classes.formControl + ' ' + (hasError ? classes.error : '')}>\n//       <div>\n//         <Formtype {...input} {...props} />\n//       </div>\n//       <div>\n//         {hasError && <span>{meta.error}</span>}\n//       </div>\n//     </div>\n//   )\n// }\n\n// export const Textarea = (props) => {\n//   return <FormControl {...props} Formtype=\"textarea\"></FormControl>\n// }\n\n\n// export const Input = (props) => {\n//   return <FormControl {...props} Formtype=\"input\"></FormControl>\n// }\n\n//--------------\n\n// export const Textarea = ({input, meta, ...props}) => {\n//   const hasError = meta.touched && meta.error;\n//   return (\n//     <div className={classes.formControl + ' ' + (hasError ? classes.error : '')}>\n//       <textarea {...input} {...props} />\n//       { hasError && <span>{meta.error}</span> }\n//     </div>\n//   )\n// }\n\n// export const Input = ({input, meta, ...props}) => {\n//   const hasError = meta.touched && meta.error;\n//   return (\n//     <div className={classes.formControl + ' ' + (hasError ? classes.error : '')}>\n//       <input {...input} {...props} />\n//       { hasError && <span>{meta.error}</span> }\n//     </div>\n//   )\n// }\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"Gallery_gallery__3UQiP\",\"photos\":\"Gallery_photos__O1HQL\",\"video\":\"Gallery_video__3AGNj\",\"photos__list\":\"Gallery_photos__list__3L6MI\",\"video__list\":\"Gallery_video__list__364aO\",\"photos__item\":\"Gallery_photos__item__2kgGN\",\"video__item\":\"Gallery_video__item__12yZp\",\"members\":\"Gallery_members__966_K\",\"members__list\":\"Gallery_members__list__11JzX\",\"members__item\":\"Gallery_members__item__4qf0m\"};","const ADD_MESSAGE = 'ADD-MESSAGE';\n\nlet initialState = {\n    dialogs: [\n        {id: 1, name: 'Dmitriy', img: 'https://i11.fotocdn.net/s122/d061c2f149c4cd54/user_l/2799648252.jpg'},\n        {\n            id: 2,\n            name: 'Andrey',\n            img: 'https://avatars.mds.yandex.net/get-zen_doc/1641332/pub_5d0764b7e75e750e0c9f8c86_5d076537789be40d64bb3e55/scale_1200'\n        },\n        {\n            id: 3,\n            name: 'Sveta',\n            img: 'https://proprikol.ru/wp-content/uploads/2020/04/kartinki-dlya-vajbera-na-avu-2.jpg'\n        },\n        {id: 4, name: 'Sasha', img: 'https://sun9-67.userapi.com/c851420/v851420113/17b609/2xTFgEyYQcM.jpg'},\n        {id: 5, name: 'Anna', img: 'https://proprikol.ru/wp-content/uploads/2019/07/prikolnye-kartinki-na-avu-21.jpg'}\n    ],\n    messages: [\n        {id: 1, message: 'Hello my friend!'},\n        {id: 2, message: 'How are you?'},\n        {id: 3, message: 'I\\'m fine, and you?'},\n        {\n            id: 4,\n            message: 'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.'\n        }\n    ]\n}\n\nconst messagesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_MESSAGE: {\n            let newMessage = action.newMessageBody;\n            return {\n                ...state,\n                messages: [...state.messages, {id: 4, message: newMessage}]\n            };\n        }\n        default:\n            return state;\n    }\n}\n\nexport const addMessage = (newMessageBody) => {\n    return {type: ADD_MESSAGE, newMessageBody};\n};\n\nexport default messagesReducer;\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2G3Hk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__2IJgv\",\"login\":\"ProfileInfo_login__1PwG0\",\"imageUpload\":\"ProfileInfo_imageUpload__1VBDE\",\"uploadPhoto\":\"ProfileInfo_uploadPhoto__2iyZp\",\"avatar\":\"ProfileInfo_avatar__3xuFq\",\"status\":\"ProfileInfo_status__2G3BZ\",\"profileData\":\"ProfileInfo_profileData__18agI\",\"wrapper\":\"ProfileInfo_wrapper__3boPV\",\"status__change\":\"ProfileInfo_status__change__3ugBz\",\"info__edit\":\"ProfileInfo_info__edit__3ANWG\",\"button__profile\":\"ProfileInfo_button__profile__2XktP\",\"save__profile\":\"ProfileInfo_save__profile__3ZD85\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"FormControls_loginForm__8gLPu\",\"formControl\":\"FormControls_formControl__2SPvv\",\"error\":\"FormControls_error__3zfBa\",\"errorPassword\":\"FormControls_errorPassword__KA8g4\",\"formControlSummaryError\":\"FormControls_formControlSummaryError__3Nn_n\",\"checkbox\":\"FormControls_checkbox__b0iUB\"};","import axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        'API-KEY': '952eaf7c-5e2f-45d7-a53d-3508e1f1673c'\n    }\n})\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data;\n            });\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n            .then(response => {\n                return response.data;\n            });\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n            .then(response => {\n                return response.data;\n            });\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/`+ userId)\n            .then(response => {\n                return response.data;\n            });\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/`+ userId)\n            .then(response => {\n                return response.data;\n            });\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status/`, { status: status })\n            .then(response => {\n                return response.data;\n            });\n    },\n\n    savePhoto(photoFile) {\n        const formData = new FormData();\n        formData.append('image', photoFile);\n        return instance.put(`profile/photo/`, formData,{\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n            .then(response => {\n                return response.data;\n            });\n    },\n\n    saveProfile(profile) {\n        return instance.put(`profile`, profile )\n    }\n}\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`)\n    },\n    login(email, password, rememberMe = false, captcha = null) {\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha })\n    },\n    logout() {\n        return instance.delete(`auth/login`)\n    }\n}\n\nexport const securityAPI = {\n    getCaptchaUrl() {\n        return instance.get(`security/get-captcha-url`)\n\n    }\n}\n","\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map(u => {\n        if (u[objPropName] === itemId) {\n            return {...u, ...newObjProps}\n        }\n        return u;\n    })\n}","import {usersAPI} from '../api/api';\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\n\nlet initialState = {\n    users: [],\n    pageSize: 12,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: [],\n    fake: 10\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case FOLLOW: {\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\n            };\n        }\n\n        case UNFOLLOW: {\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\n            };\n        }\n\n        case SET_USERS: {\n            return {\n                ...state,\n                users: action.users\n            };\n        }\n\n        case SET_TOTAL_USERS_COUNT: {\n            return {\n                ...state,\n                totalUsersCount: action.count\n            };\n        }\n\n        case SET_CURRENT_PAGE: {\n            return {\n                ...state,\n                currentPage: action.currentPage\n            };\n        }\n\n        case TOGGLE_IS_FETCHING: {\n            return {\n                ...state,\n                isFetching: action.isFetching\n            };\n        }\n\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            };\n        }\n        default:\n            return state;\n    }\n}\n\nexport const followSuccess = (userId) => {\n    return {type: FOLLOW, userId};\n};\n\nexport const unfollowSuccess = (userId) => {\n    return {type: UNFOLLOW, userId};\n};\n\nexport const setUsers = (users) => {\n    return {type: SET_USERS, users}\n};\n\nexport const setTotalUsersCount = (totalUsersCount) => {\n    return {type: SET_TOTAL_USERS_COUNT, count: totalUsersCount}\n};\n\nexport const setCurrentPage = (currentPage) => {\n    return {type: SET_CURRENT_PAGE, currentPage}\n};\n\nexport const toggleIsFetching = (isFetching) => {\n    return {type: TOGGLE_IS_FETCHING, isFetching}\n};\n\nexport const toggleFollowingProgress = (isFetching, userId) => {\n    return {type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId}\n};\n\n\nexport const requestUsers = (currentPage, pageSize) => {\n    return (dispatch) => {\n\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(currentPage));\n\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\n            dispatch(toggleIsFetching(false));\n            dispatch(setUsers(data.items));\n            dispatch(setTotalUsersCount(data.totalCount));\n        });\n    }\n}\n\nexport const follow = (userId) => {\n    return (dispatch) => {\n\n        dispatch(toggleFollowingProgress(true, userId));\n\n        usersAPI.follow(userId).then(data => {\n            if (data.resultCode == 0) {\n                dispatch(followSuccess(userId));\n            }\n            dispatch(toggleFollowingProgress(false, userId));\n        });\n    }\n}\n\nexport const unfollow = (userId) => {\n    return (dispatch) => {\n\n        dispatch(toggleFollowingProgress(true, userId));\n\n        usersAPI.unfollow(userId).then(data => {\n            if (data.resultCode == 0) {\n                dispatch(unfollowSuccess(userId));\n            }\n            dispatch(toggleFollowingProgress(false, userId));\n        });\n    }\n}\n\nexport default usersReducer;\n","export default __webpack_public_path__ + \"static/media/user-icons.b8f2c08e.png\";","import React, {useState} from 'react';\nimport classes from './Paginator.module.css';\nimport classNames from \"classnames\";\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n    return <div className={classes.paginator}>\n        { portionNumber > 1 &&\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\n\n        {pages\n            .filter(p => p >= leftPortionPageNumber && p<= rightPortionPageNumber)\n            .map((p) => {\n                return <span className={classNames({[classes.selectedPage]:currentPage === p\n                }, classes.pageNumber)}\n                    key={p}\n                    onClick={(e) => {\n                        onPageChanged(p);\n                    }}>{p}</span>\n        })}\n\n        { portionCount > portionNumber &&\n            <button onClick={() => { setPortionNumber(portionNumber + 1 )}}>NEXT</button>}\n    </div>\n}\n\nexport default Paginator;","import React from 'react';\nimport classes from './Users.module.css';\nimport userPhoto from '../../img/user-icons.png';\nimport {NavLink} from 'react-router-dom';\nimport Paginator from \"../common/Paginator/Paginator\";\n\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\n\n    return (<div className={classes.userContainer}>\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged} totalItemsCount={totalUsersCount}\n                       pageSize={pageSize}/>\n\n            <div className={classes.userList}>\n                {users.map(u => <div key={u.id} className={classes.userItem}>\n                    <NavLink to={'/profile/' + u.id}>\n                        <img src={u.photos.small != null ? u.photos.small : userPhoto} className={classes.photo}/>\n                    </NavLink>\n\n                    <div className={classes.userInfo}>\n                        <h3>{u.name}</h3>\n                        <p>{u.status}</p>\n                        {u.followed\n                            ? <button disabled={props.followingInProgress.some(id => id === u.id)}\n                                      onClick={() => {\n                                          props.unfollow(u.id);\n                                      }}>\n                                Unfollow</button>\n\n                            : <button disabled={props.followingInProgress.some(id => id === u.id)}\n                                      onClick={() => {\n                                          props.follow(u.id);\n                                      }}>\n                                Follow</button>}\n                    </div>\n                </div>)}\n            </div>\n        </div>\n    )\n}\n\nexport default Users;","export default __webpack_public_path__ + \"static/media/preloader.44de7d6e.svg\";","import React from 'react';\nimport preloader from '../../../img/preloader.svg';\nimport classes from './Preloader.module.css';\n\nlet Preloader = (props) => {\n    return (\n    <div className={classes.preloader}>\n        <img src={preloader}/>\n    </div>\n    )\n}\n\nexport default Preloader;\n","import {createSelector} from \"reselect\";\n\nconst getUsersSelector = (state) => {\n    return state.usersPage.users;\n}\n\nexport const getUsers = createSelector(getUsersSelector, (users) => {\n    return users.filter(u => true);\n})\n\n// export const getUsersSuperSelectorSample = createSelector(getUsers, getIsFetching, (users, isFetching) => {\n//     return users.filter(u => true);\n// })\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize;\n}\n\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount;\n}\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n}\n\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching;\n}\n\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress;\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {follow, setCurrentPage, unfollow, toggleFollowingProgress, requestUsers} from '../../redux/users-reducer';\nimport Users from './Users';\nimport Preloader from '../common/preloader/preloader';\nimport {compose} from 'redux';\nimport {\n    getUsers,\n    getPageSize,\n    getTotalUsersCount,\n    getCurrentPage,\n    getIsFetching,\n    getFollowingInProgress\n} from './../../redux/users-selectors';\n\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.requestUsers(pageNumber, this.props.pageSize);\n\n        // this.props.toggleIsFetching(true);\n        // this.props.setCurrentPage(pageNumber);\n\n        // usersAPI.requestUsers(pageNumber, this.props.pageSize).then(data => {\n        //     this.props.toggleIsFetching(false);\n        //     this.props.setUsers(data.items);\n        // });\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   followingInProgress={this.props.followingInProgress}\n            />\n\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    };\n}\n\n// let mapDispatchToProps = (dispatch) => {\n//   return {\n//     follow: (userId) => {\n//       dispatch(followAC(userId));\n//     },\n\n//     unFollow: (userId) => {\n//       dispatch(unFollowAC(userId));\n//     },\n\n//     setUsers: (users) => {\n//       dispatch(setUsersAC(users));\n//     },\n\n//     setCurrentPage: (pageNumber) => {\n//       dispatch(setCurrentPageAC(pageNumber));\n//     },\n\n//     setTotalUsersCount: (totalCount) => {\n//       dispatch(setTotalUsersCountAC(totalCount));\n//     },\n\n//     toggleIsFetching: (isFetching) => {\n//       dispatch(toggleIsFetchingAC(isFetching));\n//     }\n\n//   }\n// }\n\nexport default compose(\n    connect(mapStateToProps, {\n        follow, unfollow, setCurrentPage,\n        toggleFollowingProgress, requestUsers\n    })\n)(UsersContainer);","import {stopSubmit} from \"redux-form\";\nimport {profileAPI} from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USERS_PROFILE = 'SET_USERS_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\n\nlet initialState = {\n    posts: [\n        {\n            id: 1,\n            message: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s.',\n            like: 5\n        },\n        {id: 2, message: 'I am looking for a job', like: 20},\n        {id: 3, message: 'Hi. It\\'s my first post', like: 3}\n    ],\n    profile: null,\n    status: ''\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            };\n        }\n\n        case ADD_POST: {\n            let newPostText = action.newPostBody;\n            return {\n                ...state,\n                posts: [...state.posts, {id: 4, message: newPostText, like: 0}]\n            };\n        }\n\n        case SET_USERS_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            };\n        }\n\n        case DELETE_POST: {\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)};\n        }\n\n        case SAVE_PHOTO_SUCCESS: {\n            return {...state, profile: {...state.profile, photos: action.photos}};\n        }\n\n        default:\n            return state;\n    }\n}\n\nexport const addPost = (newPostBody) => {\n    return {type: ADD_POST, newPostBody};\n};\n\nexport const setUsersProfile = (profile) => {\n    return {type: SET_USERS_PROFILE, profile: profile};\n};\n\nexport const setStatus = (status) => {\n    return {type: SET_STATUS, status};\n};\n\nexport const deletePost = (postId) => {\n    return {type: DELETE_POST, postId};\n};\n\nexport const savePhotoSuccess = (photos) => {\n    return {type: SAVE_PHOTO_SUCCESS, photos};\n};\n\nexport const getUserProfile = (userId) => {\n    return (dispatch) => {\n        profileAPI.getProfile(userId).then(data => {\n            dispatch(setUsersProfile(data));\n        });\n    }\n}\n\nexport const getStatus = (userId) => {\n    return (dispatch) => {\n        profileAPI.getStatus(userId).then(data => {\n            dispatch(setStatus(data));\n        });\n    }\n}\n\nexport const updateStatus = (status) => {\n    return (dispatch) => {\n        profileAPI.updateStatus(status).then(data => {\n            if (data.resultCode === 0) {\n                dispatch(setStatus(status));\n            }\n        });\n    }\n}\n\nexport const savePhoto = (file) => {\n    return (dispatch) => {\n        profileAPI.savePhoto(file).then(data => {\n            if (data.resultCode === 0) {\n                dispatch(savePhotoSuccess(data.data.photos));\n            }\n        });\n    }\n}\n\nexport const saveProfile = (profile) => async (dispatch, getState) => {\n    const userId = getState().auth.userId;\n    const response = await profileAPI.saveProfile(profile);\n\n    if (response.data.resultCode === 0) {\n        dispatch(getUserProfile(userId));\n    } else {\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}));\n        return Promise.reject(response.data.messages[0]);\n    }\n}\n\nexport default profileReducer;\n","import React from 'react';\nimport {useEffect} from 'react';\nimport {useState} from 'react';\nimport classes from \"./ProfileInfo.module.css\";\n\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status]);\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    };\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n\n    };\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    };\n\n    return (\n        <div className={classes.status}>\n            {!editMode\n                ? <div>\n                    <b>Status: &nbsp;</b><span className={classes.status__change}\n                                               onDoubleClick={activateEditMode}>{props.status || '--------'}</span>\n                </div>\n                : <div>\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileStatusWithHooks;","import React from 'react';\n\nclass ProfileStatus extends React.Component {\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n\n    activateEditMode = () => {\n        this.setState({\n            editMode: true\n        })\n    };\n    deactivateEditMode = () => {\n        this.setState({\n            editMode: false\n        });\n        this.props.updateStatus(this.state.status);\n\n    };\n    onStatusChange = (e) => {\n        this.setState({\n            status: e.currentTarget.value\n        })\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.status !== this.props.status) {\n            this.setState({\n                tatus: this.props.status\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {!this.state.editMode\n                    ? <div>\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || '--------'}</span>\n                    </div>\n                    : <div>\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\n                               value={this.state.status}/>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default ProfileStatus;","import React, {useState} from 'react';\nimport {reduxForm} from 'redux-form';\nimport {createField, Input, Textarea} from '../../common/FormsControls/FormsControls';\nimport classes from './ProfileInfo.module.css';\nimport forms from '../../common/FormsControls/FormControls.module.css';\n\n\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\n    return (<form onSubmit={handleSubmit} className={classes.wrapper}>\n            <div>\n                <button className={classes.save__profile}>Save</button>\n            </div>\n            {error && <div className={forms.formControlSummaryError}>\n                {error}\n            </div>\n            }\n            <div>\n                <p>Full name:</p> {createField('Full name', 'fullName', [], Input)}\n            </div>\n            <div>\n                <p>Looking for a job:</p> {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\n            </div>\n            <div>\n                <p>My professional\n                    skills:</p> {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\n            </div>\n            <div>\n                <p>About me:</p> {createField(\"About me\", \"aboutMe\", [], Textarea)}\n            </div>\n            <div>\n                <h3>Contacts:</h3> {Object.keys(profile.contacts).map(key => {\n                return <div key={key} className={classes.contact}>\n                    <p>{key}:</p> {createField(key, \"contacts.\" + key, [], Input)}\n                </div>\n            })}\n            </div>\n        </form>\n    )\n}\n\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\n\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\nimport classes from './ProfileInfo.module.css'\nimport Preloader from '../../common/preloader/preloader';\nimport userPhoto from '../../../img/user-icons.png';\nimport ProfileStatus from './ProfileStatus';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\nimport ProfileDataForm from './ProfileDataForm';\n\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile, login}) => {\n\n    let [editMode, setEditMode] = useState(false);\n\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    const onMainPhotoSelect = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0]);\n        }\n    }\n\n    const onSubmit = (formData) => {\n        saveProfile(formData).then(\n            () => {\n                setEditMode(false);\n            }\n        );\n    }\n\n    return (\n        <div className={classes.profileInfo}>\n            <div className={classes.avatar}>\n                <div className={classes.login}>{profile.fullName}</div>\n\n                <img src={profile.photos.large != null ? profile.photos.large : userPhoto}/>\n\n                {isOwner && <form className={classes.imageUpload}>\n                    <label htmlFor=\"imageUpload\" className={classes.uploadPhoto}>Set profile photo</label>\n                    <input type=\"file\" onChange={onMainPhotoSelect} id=\"imageUpload\" accept=\"image/*\"\n                           style={{display: 'none'}}/>\n                </form>\n                }\n            </div>\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n\n            {editMode\n                ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\n                : <ProfileData goToEditMode={() => {\n                    setEditMode(true)\n                }} profile={profile} isOwner={isOwner}/>\n            }\n\n        </div>\n    );\n}\n\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\n    return (<div className={classes.profileData}>\n            <div className={classes.wrapper}>\n                <div className={classes.info__edit}>\n                    <h3>Info</h3>\n                    {isOwner && <button className={classes.button__profile} onClick={goToEditMode}>Edit</button>}\n                </div>\n                <div>\n                    <p>Full name:</p> {profile.fullName}\n                </div>\n                <div>\n                    <p>LookingForAJob:</p> {profile.lookingForAJob ? 'Yes' : 'No'}\n                </div>\n                {profile.lookingForAJob &&\n                <div>\n                    <p>My professional skills:</p> {profile.lookingForAJobDescription}\n                </div>\n                }\n                <div>\n                    <p>About me:</p> {profile.aboutMe}\n                </div>\n            </div>\n\n            <div className={classes.wrapper}>\n                <h3>Contacts:</h3> {Object.keys(profile.contacts).map((key) => {\n                return <Contacts key={key} contactsTitle={key} contactsValue={profile.contacts[key]}/>\n            })}\n            </div>\n        </div>\n    )\n}\nconst Contacts = ({contactsTitle, contactsValue}) => {\n\n    return (\n        <div>\n            <p>{contactsTitle}: </p>{contactsValue}\n        </div>\n    )\n\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport classes from './Post.module.css';\nimport avatar from './../../../../img/user-icons.png'\n\nconst Post = (props) => {\n\n    return (\n        <div className={classes.post}>\n            <img src={avatar} alt='avatar' width='100' height='100'/>\n            <div className={classes.message}>{props.message}</div>\n            <div className={classes.like}>like {props.like}</div>\n        </div>\n    );\n}\n\nexport default Post;","import React, {Component, PureComponent} from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\nimport {Textarea} from '../../common/FormsControls/FormsControls';\nimport classes from './MyPosts.module.css';\nimport Post from './Post/Post';\n\nconst maxLength200 = maxLengthCreator(200);\n\nconst MyPostsForm = (props) => {\n    return (<form onSubmit={props.handleSubmit} className={classes.myPostsForm}>\n            <Field name='newPostBody' component={Textarea} validate={[required, maxLength200]} type='text'\n                   placeholder='Say what is on your mind...'/>\n            <button>Add post</button>\n        </form>\n    );\n}\n\nconst MyPostsReduxForm = reduxForm({form: 'addPost'})(MyPostsForm)\n\nconst MyPosts = React.memo((props) => {\n    const addNewPost = (values) => {\n        props.addPost(values.newPostBody);\n    }\n    let postsElement = props.posts.map(post => <Post key={post.id} message={post.message} like={post.like}/>);\n\n    return (\n        <div className={classes.myPosts}>\n            {/*<h2>My posts</h2>*/}\n            <MyPostsReduxForm onSubmit={addNewPost}/>\n            <div className={classes.postList}>\n                {postsElement}\n            </div>\n        </div>\n    )\n});\n\nexport default MyPosts;\n\n// class MyPosts extends PureComponent {\n\n//   // shouldComponentUpdate(nextProps, nextState) {\n//   //   return nextProps != this.props || nextState != this.state;\n//   // }\n\n//   render(){\n//     let postsElement = this.props.posts.map(post => <Post message={post.message} like={post.like}/>);\n//     let newPostElement = React.createRef();\n//     const addNewPost = (values) => {\n//       this.props.addPost(values.newPostBody);\n//     }\n\n//     return (\n//       <div className={classes.myPosts}>\n//         <h2>My posts</h2>\n//         <MyPostsReduxForm onSubmit={addNewPost} />\n//         { postsElement }\n//       </div>\n//     )\n//   }\n// }\n\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {addPost} from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\n\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts\n    }\n};\n\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport classes from './Gallery.module.css';\n\nconst Gallery = () => {\n    return (\n        <div className={classes.gallery}>\n            <div className={classes.photos}>\n                <h3>Photos</h3>\n                <ul className={classes.photos__list}>\n                    <li className={classes.photos__item}></li>\n                    <li className={classes.photos__item}></li>\n                    <li className={classes.photos__item}></li>\n                    <li className={classes.photos__item}></li>\n                    <li className={classes.photos__item}></li>\n                    <li className={classes.photos__item}></li>\n                </ul>\n            </div>\n\n            <div className={classes.video}>\n                <h3>Video</h3>\n                <ul className={classes.video__list}>\n                    <li className={classes.video__item}>\n                        <iframe width=\"100%\" height=\"auto\" src=\"https://www.youtube.com/embed/tAgVINdc_o0\"\n                                title=\"YouTube video player\" frameBorder=\"0\"\n                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                allowFullScreen></iframe>\n\n                    </li>\n                    <li className={classes.video__item}>\n                        <iframe width=\"100%\" height=\"auto\" src=\"https://www.youtube.com/embed/GNrdg3PzpJQ\"\n                                title=\"YouTube video player\" frameBorder=\"0\"\n                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                allowFullScreen></iframe>\n                    </li>\n                </ul>\n            </div>\n\n            <div className={classes.members}>\n                <h3>Latest Members</h3>\n                <ul className={classes.members__list}>\n                    <li className={classes.members__item}></li>\n                    <li className={classes.members__item}></li>\n                    <li className={classes.members__item}></li>\n                    <li className={classes.members__item}></li>\n                    <li className={classes.members__item}></li>\n                    <li className={classes.members__item}></li>\n                </ul>\n                <div>\n\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Gallery;\n","import React from 'react';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport classes from './Profile.module.css'\nimport Gallery from \"./Gallery/Gallery\";\n\nconst Profile = (props) => {\n    return (\n        <div className={classes.profileContainer}>\n            <div className={classes.profile}>\n                <ProfileInfo savePhoto={props.savePhoto}\n                             login={props.login}\n                             isOwner={props.isOwner}\n                             profile={props.profile}\n                             status={props.status}\n                             saveProfile={props.saveProfile}\n                             updateStatus={props.updateStatus}/>\n                <MyPostsContainer/>\n                <Gallery/>\n            </div>\n        </div>\n    );\n}\n\nexport default Profile;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport {compose} from 'redux';\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\nimport {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile} from '../../redux/profile-reducer';\nimport Profile from './Profile';\n\n\nclass ProfileContainer extends React.Component {\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push('/login');\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\n            this.refreshProfile();\n        }\n    }\n\n\n    render() {\n        return (\n            <Profile {...this.props}\n                     isOwner={!this.props.match.params.userId}\n                     login={this.props.login}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}\n                     savePhoto={this.props.savePhoto}/>\n        )\n    }\n}\n\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer);\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    login: state.auth.login\n});\n\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer);\n\n\n","import {stopSubmit} from \"redux-form\";\nimport {authAPI, securityAPI} from \"../api/api\";\n\nconst SET_USER_DATA = 'SET_USER_DATA';\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    captchaUrl: null\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n        case GET_CAPTCHA_URL_SUCCESS:\n            return {\n                ...state,\n                ...action.payload\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const setAuthUserData = (userId, email, login, isAuth) => {\n    return ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\n};\n\nexport const getCaptchaUrlSuccess = (captchaUrl) => {\n    return ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}});\n};\n\nexport const getAuthUserData = () => {\n    return (dispatch) => {\n        return authAPI.me().then(response => {\n            if (response.data.resultCode === 0) {\n                let {id, login, email} = response.data.data;\n                dispatch(setAuthUserData(id, email, login, true));\n            }\n        });\n    }\n}\n\nexport const login = (email, password, rememberMe, captcha) => {\n    return (dispatch) => {\n        authAPI.login(email, password, rememberMe, captcha).then(response => {\n            if (response.data.resultCode === 0) {\n                //success, get auth data\n                dispatch(getAuthUserData());\n            } else {\n                if (response.data.resultCode === 10) {\n                    dispatch(getCaptchaUrl());\n                }\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\n                dispatch(stopSubmit('login', {_error: message}));\n            }\n        });\n    }\n}\n\nexport const getCaptchaUrl = () => async (dispatch) => {\n    const response = await securityAPI.getCaptchaUrl();\n    const captchaUrl = response.data.url;\n\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\n}\n\nexport const logout = () => {\n    return (dispatch) => {\n        authAPI.logout().then(response => {\n            if (response.data.resultCode === 0) {\n                dispatch(setAuthUserData(null, null, null, false));\n\n            }\n        });\n    }\n}\n\nexport default authReducer;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './Navbar.module.css'\n\nconst Navbar = () => {\n    return (\n        <ul className={classes.nav}>\n            <li>\n                <NavLink to='/profile' activeClassName={classes.active}>Profile</NavLink>\n            </li>\n            <li>\n                <NavLink to='/messages' activeClassName={classes.active}>Messages</NavLink>\n            </li>\n            <li>\n                <NavLink to='/users' activeClassName={classes.active}>Users</NavLink>\n            </li>\n        </ul>\n    );\n}\n\nexport default Navbar;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Navbar from './Navbar/Navbar';\nimport classes from './Header.module.css'\n\nconst Header = (props) => {\n  return (\n      <header className={classes.header}>\n          <div className={classes.container}>\n              <p className={classes.logo}>SOCIAL</p>\n              <Navbar />\n              <div className={classes.loginBlock}>\n                  { props.isAuth\n                      ? <div>{props.login} <button onClick={props.logout}>Logout</button> </div>\n                      : <NavLink to={'/login'}>Login</NavLink>}\n              </div>\n          </div>\n      </header>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {logout} from '../../redux/auth-reducer';\nimport Header from './Header';\n\nclass HeaderContainer extends React.Component {\n    render() {\n        return <Header {...this.props} />\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n});\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Field, reduxForm} from 'redux-form';\nimport {required} from '../../utils/validators/validators';\nimport {createField, Input} from '../common/FormsControls/FormsControls';\nimport classes from './Login.module.css';\nimport forms from './../common/FormsControls/FormControls.module.css';\nimport {login} from '../../redux/auth-reducer';\nimport {Redirect} from 'react-router-dom';\n\n\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\n    return (\n        <form className={forms.loginForm} onSubmit={handleSubmit}>\n            {createField(\"Email\", \"email\", [required], Input)}\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\n            <div className={forms.checkbox}>\n                {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\n            </div>\n            {captchaUrl && <img src={captchaUrl}/>}\n            {captchaUrl && createField('Symbols from image', 'captcha', [required], Input, {})}\n\n            {error && <div className={forms.formControlSummaryError}>\n                {error}\n            </div>\n            }\n            <button>Login</button>\n        </form>\n    );\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={'/profile'}/>\n    }\n\n    return (\n        <div className={classes.loginPage}>\n            <div className={classes.loginForm}>\n                <h1>Login</h1>\n                <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\n            </div>\n\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    captchaUrl: state.auth.captchaUrl,\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\nlet initialState = {\n    initialized: false\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const initializedSuccess = () => {\n    return ({type: INITIALIZED_SUCCESS});\n};\n\nexport const initializeApp = () => {\n    return (dispatch) => {\n        let promise = dispatch(getAuthUserData());\n        promise.then(() => {\n            dispatch(initializedSuccess());\n        });\n        //Promise.all([promise1, promise2, promise3]).then(()=>{ do something ...})\n    }\n}\n\nexport default appReducer;\n","import React, {Component} from 'react';\nimport './App.css';\nimport {Redirect, Route, Switch, withRouter} from 'react-router-dom';\nimport UsersContainer from './components/Users/usersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport {compose} from 'redux';\nimport {connect} from 'react-redux';\nimport {initializeApp} from './redux/app-reducer'\nimport Preloader from './components/common/preloader/preloader';\nimport {withSuspense} from \"./hoc/withSuspense\";\n\n// import MessagesContainer from './components/Messages/MessagesContainer';\nconst MessagesContainer = React.lazy(() => import('./components/Messages/MessagesContainer'));\n\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <div className='app-wrapper-content'>\n                    <Switch>\n                        <Route exact path='/' render={() => <Redirect to={'/profile'}/>}/>\n                        <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                        <Route path='/messages' render={withSuspense(MessagesContainer)}/>\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/login' render={() => <Login/>}/>\n                        <Route path='*' render={() => <div>404 Not found</div>}/>\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n","import React from 'react';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withSuspense = (Component) => {\n    return (props) => {\n        return <React.Suspense fallback={<div>Loading...</div>}>\n            <Component {...props} />\n        </React.Suspense>\n    };\n}","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport authReducer from \"./auth-reducer\";\nimport messagesReducer from \"./messages-reducer\";\nimport profileReducer from \"./profile-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {reducer as formReducer} from 'redux-form';\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    messagesPage: messagesReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nwindow._store_ = store;\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/redux-store';\nimport {HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>, document.getElementById('root'));\n","export const required = (value) => {\n    if (value) return undefined;\n    return 'Field is required';\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userContainer\":\"Users_userContainer__1Ycei\",\"userList\":\"Users_userList__1Pdux\",\"userItem\":\"Users_userItem__GlyEr\",\"userInfo\":\"Users_userInfo__21fTd\",\"photo\":\"Users_photo__2hOPg\",\"selectedPage\":\"Users_selectedPage__J63sh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__31eBs\",\"active\":\"Navbar_active__1NBcA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"container\":\"Header_container__1VC87\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__18P4_\",\"pageNumber\":\"Paginator_pageNumber__xOsKi\",\"selectedPage\":\"Paginator_selectedPage__3SIki\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__14O2X\",\"myPostsForm\":\"MyPosts_myPostsForm__290-O\",\"postList\":\"MyPosts_postList__2e48R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__A0EJd\",\"message\":\"Post_message__3raFK\",\"like\":\"Post_like__oViQh\"};","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\n\n            return <Component {...this.props} />\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent;\n}"],"sourceRoot":""}