{"version":3,"sources":["components/Messages/Messages.module.css","components/Messages/DialogItem/DialogItem.jsx","components/Messages/Message/Message.jsx","components/Messages/Messages.jsx","components/Messages/MessagesContainer.jsx"],"names":["module","exports","DialogItem","props","className","classes","dialogItem","active","src","img","alt","to","id","name","Message","message","maxLength200","maxLengthCreator","MessagesReduxForm","reduxForm","form","onSubmit","handleSubmit","messagesForm","Field","placeholder","component","Textarea","validate","required","type","Messages","state","messagesPage","dialogs","map","dialog","messages","messagesContainer","dialogsList","messagesList","messageItem","values","addMessage","newMessageBody","compose","connect","withAuthRedirect"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,kBAAoB,oCAAoC,aAAe,+BAA+B,YAAc,8BAA8B,OAAS,yBAAyB,WAAa,6BAA6B,aAAe,+BAA+B,YAAc,8BAA8B,QAAU,4B,qJCarUC,EATI,SAACC,GAChB,OACI,sBAAKC,UAAWC,IAAQC,WAAa,IAAMD,IAAQE,OAAnD,UACI,qBAAKC,IAAKL,EAAMM,IAAKC,IAAI,WACzB,cAAC,IAAD,CAASC,GAAI,aAAeR,EAAMS,GAAlC,SAAuCT,EAAMU,WCF1CC,EAJC,SAACX,GACb,OAAO,qBAAKC,UAAWC,IAAQU,QAAxB,SAAkCZ,EAAMY,WCI7CC,EAAeC,YAAiB,KAWhCC,EAAoBC,YAAU,CAACC,KAAM,cAAjBD,EAVL,SAAChB,GAClB,OACI,uBAAMkB,SAAUlB,EAAMmB,aAAclB,UAAWC,IAAQkB,aAAvD,UACI,cAACC,EAAA,EAAD,CAAOC,YAAY,oBAAoBZ,KAAK,iBAAiBa,UAAWC,IACjEC,SAAU,CAACC,IAAUb,GAAec,KAAK,SAChD,gDAqCGC,EA9BE,SAAC5B,GACd,IAGI6B,EAAQ7B,EAAM8B,aACdC,EACAF,EAAME,QAAQC,KAAI,SAAAC,GAAM,OAAI,cAAC,EAAD,CAAYvB,KAAMuB,EAAOvB,KAAMD,GAAIwB,EAAOxB,GAAIH,IAAK2B,EAAO3B,SACtF4B,EACAL,EAAMK,SAASF,KAAI,SAAApB,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,aAE5D,OACI,qBAAKX,UAAWC,IAAQiC,kBAAxB,SACI,sBAAKlC,UAAWC,IAAQ4B,aAAxB,UACI,qBAAK7B,UAAWC,IAAQkC,YAAxB,SACKL,IAGL,sBAAK9B,UAAWC,IAAQmC,aAAxB,UACI,qBAAKpC,UAAWC,IAAQoC,YAAxB,SACKJ,IAEL,cAACnB,EAAD,CAAmBG,SApBb,SAACqB,GACnBvC,EAAMwC,WAAWD,EAAOE,4BCXjBC,sBACXC,aAPkB,SAACd,GACnB,MAAO,CACHC,aAAcD,EAAMC,gBAKC,CAACU,iBAC1BI,IAFWF,CAGbd","file":"static/js/3.1f6ec8d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesContainer\":\"Messages_messagesContainer__2E18U\",\"messagesPage\":\"Messages_messagesPage__3YDZ5\",\"dialogsList\":\"Messages_dialogsList__3ZeBl\",\"active\":\"Messages_active__3SraG\",\"dialogItem\":\"Messages_dialogItem__1TKXy\",\"messagesForm\":\"Messages_messagesForm__gH8LU\",\"messageItem\":\"Messages_messageItem__3ne8A\",\"message\":\"Messages_message__ZlNvM\"};","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport classes from './../Messages.module.css';\n\n\nconst DialogItem = (props) => {\n    return (\n        <div className={classes.dialogItem + ' ' + classes.active}>\n            <img src={props.img} alt=\"Avatar\"/>\n            <NavLink to={'/messages/' + props.id}>{props.name}</NavLink>\n        </div>\n    );\n}\n\nexport default DialogItem;","import React from 'react';\nimport classes from './../Messages.module.css';\n\nconst Message = (props) => {\n    return <div className={classes.message}>{props.message}</div>\n}\n\nexport default Message;","import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {maxLengthCreator, required} from '../../utils/validators/validators';\nimport {Textarea} from '../common/FormsControls/FormsControls';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport classes from './Messages.module.css';\n\nconst maxLength200 = maxLengthCreator(200);\nconst MessagesForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className={classes.messagesForm}>\n            <Field placeholder='Enter you message' name='newMessageBody' component={Textarea}\n                   validate={[required, maxLength200]} type='text'/>\n            <button>Send</button>\n        </form>\n    );\n}\n\nconst MessagesReduxForm = reduxForm({form: 'addMessage'})(MessagesForm);\n\nconst Messages = (props) => {\n    const addNewMessage = (values) => {\n        props.addMessage(values.newMessageBody)\n    };\n    let state = props.messagesPage;\n    let dialogs =\n        state.dialogs.map(dialog => <DialogItem name={dialog.name} id={dialog.id} img={dialog.img}/>);\n    let messages =\n        state.messages.map(message => <Message message={message.message}/>);\n\n    return (\n        <div className={classes.messagesContainer}>\n            <div className={classes.messagesPage}>\n                <div className={classes.dialogsList}>\n                    {dialogs}\n                </div>\n\n                <div className={classes.messagesList}>\n                    <div className={classes.messageItem}>\n                        {messages}\n                    </div>\n                    <MessagesReduxForm onSubmit={addNewMessage}/>\n                </div>\n            </div>\n        </div>\n\n\n    );\n}\n\nexport default Messages;","import {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\nimport {addMessage} from '../../redux/messages-reducer';\nimport Messages from './Messages';\n\nlet mapStateToProps = (state) => {\n    return {\n        messagesPage: state.messagesPage\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, {addMessage}),\n    withAuthRedirect\n)(Messages);"],"sourceRoot":""}